@import 'variables';
@import '../game.vars.scss';

.game-card {
  position: relative;
  padding: calc(var(--card-border) - 1px);
  border: 1px solid black;
  background: white;
  &.back-border { 
    border: 1px solid transparent;
    background: black; 
  }
  border-radius: calc(var(--card-border) + 2px); // 5px;
  transition-duration: 150ms;
  img {
    position: absolute;
    top    : calc(var(--card-border));
    left   : calc(var(--card-border));
    right  : calc(var(--card-border));
    bottom : calc(var(--card-border));
    height : calc(100% - calc(var(--card-border) * 2));
    width  : calc(100% - calc(var(--card-border) * 2));
  }

  // Default size
  width: var(--card-width);   // 150
  height: var(--card-height); // 210


  .damage-points, .life-points, .x-value {
    position: absolute;
    left: calc(50% - calc(var(--size-ref) * 0.3)); // xl = 30
    top: calc(var(--size-ref) * 0.23);
    font-size: calc(var(--size-ref) * 0.6);

    font-weight: 600;
    -webkit-text-stroke: 2px #fff;
    color: red;
    .icon-power, .icon-cross, .icon-plus { 
      font-size: calc(var(--size-ref) * 0.3); // xl = 30px;
    }
  }
  .life-points {
    color: #60dd66; display: flex; align-items: center;
  }


  .attack-defense {
    position: absolute;
    text-align: center;
    bottom    : calc(var(--size-ref) * -0.05);  // xl = -5px;
    right     : calc(var(--size-ref) * 0.09);   // xl = 9px;
    font-size : calc(var(--size-ref) * 0.4);    // xl = 40px

    font-weight: 600;
    -webkit-text-stroke: 2px #3f3f3f;
    color: #ffffff;
  }

  .effects-badge {
    position: absolute;
    right: 0;
    left: 0;
    top: calc(var(--size-ref) * -0.10); // xl = -10px;
    text-align: center;
    span {
      font-size : calc(var(--size-ref) * 0.16); // xl = 16px
      font-weight: 500;
      color: #ffffff;
      background: orange;
      border-radius: 4px;
      padding: 2px 12px;
      cursor: pointer;
    }
  }

  .deck-count {
    position: absolute;
    bottom: calc(var(--size-ref) * 0.33); // xl = 33px;
    font-size: calc(var(--size-ref) * 0.30); // xl = 30px;
    left: 0;
    right: 0;
    text-align: center;
    color: rgba(255, 255, 255, 0.5);
  }

  .owner {
    position: absolute; 
    font-size: calc(var(--size-ref) * 0.11);
    top: calc(var(--size-ref) * -0.17);
    left: 0px;
  }

  .debug-box {
    position: absolute;
    bottom: 30px;
    margin-left: 5px;
    color: white;
    background: black;
  }

  &.selectable-card {
    cursor: pointer;
    box-shadow: 0px 0px calc(var(--size-ref) * 0.03) calc(var(--size-ref) * 0.03) $card-selectable-color; // xl = 3px 3px
    &:hover {
      // background-color: #00ff2d75 !important;
      // border-color: #00ff2d75 !important;
      box-shadow: 0px 0px calc(var(--size-ref) * 0.03) calc(var(--size-ref) * 0.03) $card-selectable-hover; // xl = 3px 3px
    }
  }


  &.is-sick { opacity: 0.35; } // for summon sickness (creatures)
  &.is-hidden { opacity: 0; }
  &.empty { background: black; }

  
  // HAND Location specific styles:
  &.handA, &.handB {
    &.is-summoning { // hand card waiting for cast mana
      opacity: 0.5;
      transform: translateY(-20px);
    }
    .attack-defense { display: none; }
  } 

  // TABLE Location specific styles:
  &.tbleA, &.tbleB { 
  // Smaller size for the table
    max-width: calc(var(--card-width) * 0.81);    // 121
    max-height: calc(var(--card-height) * 0.81);  // 170
    &.is-selected-attack, &.is-selected-defense { display: none; } // table card when seleced for combat
    &.is-tapped {
      // transform-origin: center;
      margin-left: 30px !important;
      transform: rotate(90deg);
    }
    .damage-points { top: calc(var(--size-ref) * 0.10); }
  }

  // GRAVEYARD Location specific styles:
  &.gravA, &.gravB {
    opacity: 0.5;
    // &.empty { background: black; }
    cursor: pointer;
    .damage-points { display: none; }
    .attack-defense { display: none; }
  }
  &.panelGrav {
    .damage-points { display: none; }
    .attack-defense { display: none; }
  }

  // STACK Location specific styles:
  &.stack {
    &.is-dying:not(.selectable-card) { box-shadow: 0px 0px 6px 3px $card-is-dying-color; }
    &.has-targets:not(.selectable-card) {
      &.type-sorcery, &.type-interruption, &.type-enchantment {
        box-shadow: 0px 0px 15px 5px $card-stack-highlight;
        animation-duration: 1.8s;
        animation-iteration-count: infinite;
        animation-name: casting-bg-ani;
        @keyframes casting-bg-ani {
          0%    { box-shadow: 0px 0px 15px 5px $card-stack-highlight; }
          50%   { box-shadow: 0px 0px  5px 2px $card-stack-highlight; }
        }
      }
    }
    .attack-defense {
      animation-duration: 2s;
      animation-iteration-count: infinite;
      &.delta {
        animation-name: attack-defense-delta-ani;
        @keyframes attack-defense-delta-ani {
          0%    { bottom: 60px; opacity: 1; }
          70%   { bottom: -5px; opacity: 0.1; }
          100%  { bottom: -5px; opacity: 0; }
        }
      }
      &.turn {
        animation-name: attack-defense-turn-ani;
        @keyframes attack-defense-turn-ani {
          0%    { opacity: 1; }
          30%   { opacity: 1; }
          80%   { opacity: 0; }
          100%  { opacity: 0; }
        }
      }
      &.shado {
        animation-name: attack-defense-shadow-ani;
        @keyframes attack-defense-shadow-ani {
          0%    { opacity: 0; }
          30%   { opacity: 0; }
          80%   { opacity: 1; }
          100%  { opacity: 1; }
        }
      }
    }
  }


  &.damageDialog, &.deckSelection {
    width: calc(var(--card-width) * 0.75);    // 
    height: calc(var(--card-height) * 0.75);  // 
    border-radius: calc((var(--card-border) + 2px) * 0.75);
    img {
      top    : calc(var(--card-border) * 0.75);
      left   : calc(var(--card-border) * 0.75);
      right  : calc(var(--card-border) * 0.75);
      bottom : calc(var(--card-border) * 0.75);
      height : calc(100% - calc(var(--card-border) * 0.75 * 2));
      width  : calc(100% - calc(var(--card-border) * 0.75 * 2));
    }
  }
  
  &.customDialog {  // Larger size for the modal
    width: calc(var(--card-width) * 1.5);    // 
    height: calc(var(--card-height) * 1.5);  // 
    border-radius: calc((var(--card-border) + 2px) * 1.5);
    img {
      top    : calc(var(--card-border) * 1.5);
      left   : calc(var(--card-border) * 1.5);
      right  : calc(var(--card-border) * 1.5);
      bottom : calc(var(--card-border) * 1.5);
      height : calc(100% - calc(var(--card-border) * 1.5 * 2));
      width  : calc(100% - calc(var(--card-border) * 1.5 * 2));
    }
  }
  
  &.mobDeck {
    width: calc(var(--card-width) * 0.5);    // 
    height: calc(var(--card-height) * 0.5);  // 
    border-radius: calc((var(--card-border) + 2px) * 0.5);
    img {
      top    : calc(var(--card-border) * 0.5);
      left   : calc(var(--card-border) * 0.5);
      right  : calc(var(--card-border) * 0.5);
      bottom : calc(var(--card-border) * 0.5);
      height : calc(100% - calc(var(--card-border) * 0.5 * 2));
      width  : calc(100% - calc(var(--card-border) * 0.5 * 2));
    }
  }

}







:host {
  display: block;
  .game-card.back-card  {
    background-color: black; 
    border: none;
    // margin: 3.5px 5px;
  }
}